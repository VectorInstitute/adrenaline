services:
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
      args:
        - FRONTEND_PORT=${FRONTEND_PORT}
        - BACKEND_PORT=${BACKEND_PORT}
        - BACKEND_HOST=${BACKEND_HOST}
    image: vectorinstitute/adrenaline:frontend-dev-${BUILD_ID}
    env_file: .env.development
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    environment:
      - NEXT_PUBLIC_BACKEND_HOST=${BACKEND_HOST}
      - NEXT_PUBLIC_BACKEND_PORT=${BACKEND_PORT}
      - NEXT_PUBLIC_FRONTEND_PORT=${FRONTEND_PORT}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend-dev
    networks:
      - app-network

  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
      args:
        - BACKEND_PORT=${BACKEND_PORT}
        - FRONTEND_PORT=${FRONTEND_PORT}
    image: vectorinstitute/adrenaline:backend-dev-${BUILD_ID}
    env_file: .env.development
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    environment:
      - BACKEND_PORT=${BACKEND_PORT}
      - FRONTEND_PORT=${FRONTEND_PORT}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - MONGO_URI=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongodb:27017
    volumes:
      - ./backend:/app
    networks:
      - app-network
    depends_on:
      - mongodb

  mongodb:
    image: mongo:4.4.18
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    networks:
      - app-network

volumes:
  mongodb_data:

networks:
  app-network:
    driver: bridge
